networks:
  favorite-places:

services:
  # GraphQL API Gateway
  favorite-places-gateway:
    build: ./graphql
    container_name: favorite-places-gateway
    command: flask --debug run --host=0.0.0.0 --port=8000
    ports:
      - "8000:8000"
    volumes:
      - ./graphql/src:/src
      - ./graphql/docs:/docs
    env_file:
      - graphql/.env
    networks:
      - favorite-places

  # сервис приложения FastAPI
  favorite-places-app:
    build: ./favorite-places
    container_name: favorite-places-app
    command: uvicorn main:app --log-config logging.conf --reload --host 0.0.0.0 --port=8000
    hostname: favorite-places-app.net
    ports:
      - "8010:8000"
    volumes:
      - ./favorite-places/src:/src
      - ./favorite-places/docs:/docs
    env_file:
      - ./favorite-places/.env
    depends_on:
      favorite-places-db:
        condition: service_healthy
    networks:
      - favorite-places

  # сервис СУБД PostgreSQL
  favorite-places-db:
    image: postgres:15-alpine
    container_name: favorite-places-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "54320:5432"
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
    healthcheck:
      # https://www.postgresql.org/docs/current/app-pg-isready.html
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - favorite-places